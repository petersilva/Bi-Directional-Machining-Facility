
WORKING ON:
  -- logfile support not general yet.

TODO:
  -- Replace literal op-codes with consants OC_
  -- add file name to BLOCK send...
  -- set cwd ?
  -- bug: click on flags causes value change...
  -- decimal in counters.
  -- documentation review.
        -- help function in GUI?
  -- automated Testing.
        -- file transfer loopback test.

  -- logging to a text file... 
        -- add file name choice to Settings.
        -- good method of logfile name selection.
        -- maybe z80 will log too?
  -- subtract Acks?  Do we need them?
       -- Acks are not generated, current flag does nothing in app.
  -- have routine updates make radiobuttons symmetrical.
  -- have toggles stay depressed when appropriiate.

2010/10/17:
  -- added leds and labels to the loopback tests.
  -- determined that neither worked, bugfixed.

2010/10/12: 
  -- pullfile function.
      -- complete readcmd stanza for 0x87
  -- Added file name to 0x80 blockmode, becomes a send file op-code.
  -- FIXME: reception of intel hex format.
	-- vrfy checksums.
	-- store them to file, named by 80 op-code 
  -- verification receipt of intel-hex records. Re-Tx requested as needed.
  -- removed display switches in Settings Menu, redundant vs. View menu.
  -- re-tested file transfer, might have been busted, misc. bug-fixes. works now.
  -- logging to a text file... 
        -- log everything...
  -- make leds work?
        -- should clicking cause an action?
        -- status update via flags.
        -- label set via op-code.

2010/10/06:
  -- made keyboard faster: eliminate long autorepeat delay, shorten interval 10x to 5 ms.
  -- add LEDS (visual only for now...)
  -- changed text buttons to arrows.
  -- go routines removed from GUI, and a single go routine in __init__.py
  -- go routine now returns a counter update to BMF peer (emulation function.)
  -- go routines now called on receipt of key stroke.
  -- eliminated last_update
  -- eliminate lots of dead code:
       -- self.last_update in GUI (replaced by timed stuff.)

2010/10/05:
  -- added leading 0Â´s to character display of counter values.
  -- Docking Widget re-factor.

2010/10/02:
  -- documentated purpose for many routines in GUI.py.
  -- added 0x90->0x9f op-codes for counter updates.
  -- added 0x84 setCounterXY support, new op-code to say where it lives.
  -- have sub-second timestamps in the log.
  -- replaced fixed refresh interval with looking at how long refresh takes
     on the machine, and trying not to return before it has spent at least
     half it's time on something else.  In this way, it should never lag... 
  -- made protocol symmetrical
       -- tx register setting. (one liner!)
       -- tx graphic display  (one liner!)
       -- tx register positioning (one liner!)...
  -- Added the AA - Alcaholics Anonymous op-code...
     improved self-test rig, by having network server generate test data, so 
     GUI actually receives and parses display update commands (this code not
     exercised in previous testing rigs.)

2010/09/25:
  -- speedups:
	-- optimized some loops. (CharDisplay.repaint...)
	-- ignore graphical updates < x ms. apart (see GUI.__guiupdate)
        -- started buffering reads
  -- added crash and burn to avoid infinite loop at exit of one end of socket.
  -- from: make protocol symmetrical
       -- rx intel hex stream... (bogus, just discards what it rx's)
  -- log length now fixed at 100.

2010/09/21:
  -- bugfix regressions for intel hex send (binrec)
  -- bugfix regression for send button binding.
  -- bugfix clear screen decode meant nothing gets displayed.
  -- enhancement: hello prints in various places. 

2010/09/19:
  -- have font selection fill window in char display
  -- disconnect.
  -- clear screen command in Testing.
  -- remove autorepeat from Connect.

2010/09/18:
  -- have toggle buttons visually confirm state.
  -- make protocol symmetrical
       -- rx register setting
       -- rx draw command.
  -- use poll & serial peek commands to remove non-blocking reads.
  -- starts up with no connection (need not have a bmf object working.)
  -- move logging to work with callbacks, so other classes can log.
  -- have protocol for drawing in the char window.
  -- have it work with sockets, and have two bmf's talk to eachother.
  -- get on github. need public ssh key for that.
  -- send multiple arbitrary bytes (>1)
  -- have Settings dialog work.


2010/09/10:
----------
  -- send arbitrary byte (dialog)
  -- one big fixed window.
  -- compteur x, y, z.   absolut et relative.
  -- 20x48 character display.

  compteurs:
    ax, ay, az       -  01, 02, 03
    relx, rely, relz -  04, 05, 06

  -- GUI exposure of writechk.
     (writechk just prints errors to stdout...)
     see status messages at bottom of app window.


2010/08/22:
  -- check return status of all record writes.
  -- another dialog to specify start address for bulk xfers.
  -- default command now is to start GUI.

2010/08/21:
  -- encode binary in intelhex binary format.
  -- transliterate .hex into binary format.
  -- sends them one a a time waiting for successful receipt. signal.

  -- sends three character key commands.

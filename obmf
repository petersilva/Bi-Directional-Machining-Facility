#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Copyright (C) 2008,2009  Peter Silva (Peter.A.Silva@gmail.com)
comes with ABSOLUTELY NO WARRANTY; For details type see the file
named COPYING in the root of the source directory tree.
"""

"""
Operate BMF - le programme pour op√©rer un BMF. part le GUI

"""

import bmf
import string

def usage():
  print """
  obmf <options> command <arguments> 
    -p / --port = "COM2:", or "/dev/ttyS0"
    -s / --speed = 38400 
      
  command is one of:
        view  - start the keyboard GUI.
        send file.hex  - write a file in intel hex format 0
             file.bin  - write a binary, encoding in intel hex.
 
        key  <command>
        key is one of: """ + string.join(bmf.keycodes.keys(),',') + """
  """


import sys
import getopt

port="COM2:"
speed=38400

opts, args = getopt.getopt(sys.argv[1:],"p:s:V",[ 
"port=", "speed=", "version" ])

for o, a in opts:
  if o in ( "-p", "--port"):
     port = a
  elif o in ( "-s", "--speed"):
     speed = int(a)
  elif o in ( "-V", "--version"):
     print "my version..."
  else:
     usage()
     sys.exit()

print "port: %s, speed: %d\n", port, speed
if port != None:
  b = bmf.bmf(port,speed)

if len(args) == 0:
  usage()
  sys.exit()

if args[0] == 'view':
  from PyQt4 import QtGui
  from PyQt4 import QtCore
  from bmfGUI import bmfGUI
 
  app = QtGui.QApplication(sys.argv)
  tb = bmfGUI(b)
  tb.show()
  app.exec_()

elif ( args[0] == 'key' ):
  print "Send a key"
  b.sendKey(args[1])
elif args[0] == 'send':
  print "Send Intel Hex file"
  filename = args[1]
  if (filename[-4:] == '.hex'):
     b.sendbulkhex(filename)
  else:
     b.sendbulkbin(filename)

else:
  print "some other command..."
